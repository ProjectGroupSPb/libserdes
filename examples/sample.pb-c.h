/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: sample.proto */

#ifndef PROTOBUF_C_sample_2eproto__INCLUDED
#define PROTOBUF_C_sample_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Com__Mycorp__Mynamespace__SampleRecord Com__Mycorp__Mynamespace__SampleRecord;


/* --- enums --- */


/* --- messages --- */

struct  _Com__Mycorp__Mynamespace__SampleRecord
{
  ProtobufCMessage base;
  int32_t my_field1;
  double my_field2;
};
#define COM__MYCORP__MYNAMESPACE__SAMPLE_RECORD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&com__mycorp__mynamespace__sample_record__descriptor) \
    , 0, 0 }


/* Com__Mycorp__Mynamespace__SampleRecord methods */
void   com__mycorp__mynamespace__sample_record__init
                     (Com__Mycorp__Mynamespace__SampleRecord         *message);
size_t com__mycorp__mynamespace__sample_record__get_packed_size
                     (const Com__Mycorp__Mynamespace__SampleRecord   *message);
size_t com__mycorp__mynamespace__sample_record__pack
                     (const Com__Mycorp__Mynamespace__SampleRecord   *message,
                      uint8_t             *out);
size_t com__mycorp__mynamespace__sample_record__pack_to_buffer
                     (const Com__Mycorp__Mynamespace__SampleRecord   *message,
                      ProtobufCBuffer     *buffer);
Com__Mycorp__Mynamespace__SampleRecord *
       com__mycorp__mynamespace__sample_record__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   com__mycorp__mynamespace__sample_record__free_unpacked
                     (Com__Mycorp__Mynamespace__SampleRecord *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Com__Mycorp__Mynamespace__SampleRecord_Closure)
                 (const Com__Mycorp__Mynamespace__SampleRecord *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor com__mycorp__mynamespace__sample_record__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_sample_2eproto__INCLUDED */
